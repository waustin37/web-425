{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class SignInGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(next, state) {\n    let isLoggedIn = next.queryParams['isLoggedIn'];\n    if (isLoggedIn) {\n      return true;\n    } else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n}\n_class = SignInGuard;\n_class.ɵfac = function SignInGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SignInGuard","constructor","router","canActivate","next","state","isLoggedIn","queryParams","navigate","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["/Users/WillAustin/Documents/GitHub/web-425/week-3/enhanced-secure-profile-app/src/app/sign-in.guard.ts"],"sourcesContent":["/**\n * Title: sign-in.guard.ts\n * Author: William Austin\n * Date: 26 August 2023\n * Description: Sign In Route Guard\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignInGuard implements CanActivate {\n\n  constructor(private router: Router) {\n\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    let isLoggedIn = next.queryParams['isLoggedIn'];\n\n    if (isLoggedIn) {\n      return true;\n    } else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n}"],"mappings":";;;AAeA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAE1B;EAEAC,WAAWA,CAACC,IAA4B,EAAEC,KAA0B;IAElE,IAAIC,UAAU,GAAGF,IAAI,CAACG,WAAW,CAAC,YAAY,CAAC;IAE/C,IAAID,UAAU,EAAE;MACd,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACJ,MAAM,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3B,OAAO,KAAK;;EAEhB;;SAhBWR,WAAW;;mBAAXA,MAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;;SAAXZ,MAAW;EAAAa,OAAA,EAAXb,MAAW,CAAAc,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}